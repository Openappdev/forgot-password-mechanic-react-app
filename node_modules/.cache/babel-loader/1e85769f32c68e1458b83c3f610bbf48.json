{"ast":null,"code":"import Request from \"./Request\";\nimport { staticData } from \"../data/static\";\nconst UserService = {\n  /**\n   * @description this method requests the server to issue the recovery process to the user\n   */\n  async recoveryPassword(loginId) {\n    const parameter = {\n      loginId\n    };\n\n    try {\n      const res = await Request.post(\"forgot-password\", null, parameter);\n      let response = {};\n\n      switch (res.status) {\n        case 200:\n          // user password has been successfully recovered\n          response = {\n            success: true,\n            message: res.data.message\n          };\n          break;\n\n        case 401:\n          // User not found\n          response = {\n            success: false,\n            message: res.data.error.message\n          };\n          break;\n\n        default:\n          // unexpected issue occured\n          response = {\n            success: false,\n            message: staticData.notification.unexpectedErrorMessage\n          };\n          break;\n      }\n\n      return Promise.resolve(response);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n};\nexport default UserService;","map":{"version":3,"sources":["/Users/mac/Documents/dev/Test_Technic/forgot-password-mechanic-react-app/src/services/UserService.js"],"names":["Request","staticData","UserService","recoveryPassword","loginId","parameter","res","post","response","status","success","message","data","error","notification","unexpectedErrorMessage","Promise","resolve","e","reject"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,MAAMC,WAAW,GAAG;AAChB;;;AAGA,QAAMC,gBAAN,CAAuBC,OAAvB,EAAgC;AAC5B,UAAMC,SAAS,GAAG;AACdD,MAAAA;AADc,KAAlB;;AAIA,QAAI;AACA,YAAME,GAAG,GAAG,MAAMN,OAAO,CAACO,IAAR,CAAa,iBAAb,EAAgC,IAAhC,EAAsCF,SAAtC,CAAlB;AACA,UAAIG,QAAQ,GAAG,EAAf;;AAEA,cAAQF,GAAG,CAACG,MAAZ;AACI,aAAK,GAAL;AAAU;AACND,UAAAA,QAAQ,GAAG;AACPE,YAAAA,OAAO,EAAE,IADF;AAEPC,YAAAA,OAAO,EAAEL,GAAG,CAACM,IAAJ,CAASD;AAFX,WAAX;AAIA;;AACJ,aAAK,GAAL;AAAU;AACNH,UAAAA,QAAQ,GAAG;AACPE,YAAAA,OAAO,EAAE,KADF;AAEPC,YAAAA,OAAO,EAAEL,GAAG,CAACM,IAAJ,CAASC,KAAT,CAAeF;AAFjB,WAAX;AAIA;;AACJ;AACI;AACAH,UAAAA,QAAQ,GAAG;AACPE,YAAAA,OAAO,EAAE,KADF;AAEPC,YAAAA,OAAO,EAAEV,UAAU,CAACa,YAAX,CAAwBC;AAF1B,WAAX;AAIA;AAnBR;;AAsBA,aAAOC,OAAO,CAACC,OAAR,CAAgBT,QAAhB,CAAP;AACH,KA3BD,CA2BE,OAAOU,CAAP,EAAU;AACR,aAAOF,OAAO,CAACG,MAAR,CAAeD,CAAf,CAAP;AACH;AACJ;;AAvCe,CAApB;AA0CA,eAAehB,WAAf","sourcesContent":["import Request from \"./Request\";\nimport { staticData } from \"../data/static\";\n\nconst UserService = {\n    /**\n     * @description this method requests the server to issue the recovery process to the user\n     */\n    async recoveryPassword(loginId) {\n        const parameter = {\n            loginId\n        };\n\n        try {\n            const res = await Request.post(\"forgot-password\", null, parameter);\n            let response = {};\n\n            switch (res.status) {\n                case 200: // user password has been successfully recovered\n                    response = {\n                        success: true,\n                        message: res.data.message\n                    };\n                    break;\n                case 401: // User not found\n                    response = {\n                        success: false,\n                        message: res.data.error.message\n                    };\n                    break;\n                default:\n                    // unexpected issue occured\n                    response = {\n                        success: false,\n                        message: staticData.notification.unexpectedErrorMessage\n                    };\n                    break;\n            }\n\n            return Promise.resolve(response);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n};\n\nexport default UserService;\n"]},"metadata":{},"sourceType":"module"}